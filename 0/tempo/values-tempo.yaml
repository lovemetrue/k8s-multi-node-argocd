global:
## Настройки provisioner (k8s, deckhouse)
  provisioner: "k8s"
tempoQuery:
  repository: grafana/tempo-query
  tag: null
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

  # -- if False the tempo-query container is not deployed
  enabled: true

  service:
    port: 16686

  ingress:
    enabled: true
    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    ingressClassName: "nginx"
    # Values can be templated
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    labels: {}
    path: /

    # pathType is only for k8s >= 1.1=
    pathType: Prefix

    hosts:
      - tempo.vps.elewise.com
    ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
    extraPaths: []
    # - path: /*
    #   backend:
    #     serviceName: ssl-redirect
    #     servicePort: use-annotation
    ## Or for k8s > 1.19
    # - path: /*
    #   pathType: Prefix
    #   backend:
    #     service:
    #       name: ssl-redirect
    #       port:
    #         name: use-annotation
tempo:
  metricsGenerator:
    enabled: true
    remoteWriteUrl: "http://prometheus-operated.monitoring.svc:9090/api/v1/write"
  resources:
  requests:
    memory: 2Gi
    cpu: "500m"
  limits:
    memory: 4Gi
  affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 50
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
  config: |
    multitenancy_enabled: false
    usage_report:
      reporting_enabled: true

    compactor:
      compaction:
        block_retention: 24h

    distributor:
      receivers:
        otlp:
          protocols:
            grpc: {}
            http: {}
        jaeger:
          protocols:
            grpc: {}
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: inmemory
      trace_idle_period: 10s
      max_block_duration: 5m
      max_block_bytes: 16777216
  
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095

    metrics_generator:
      registry:
        collection_interval: 15s
        external_labels:
          source: tempo
      ring:
        kvstore:
          store: memberlist
      storage:
        path: /var/tempo/wal/metrics
      
    storage:
      trace:
        backend: s3
        s3:
          bucket: tempo
          endpoint: master.sale.elewise.com:9000
          access_key: elma365user
          secret_key: SecretPassword
          insecure: false
          tls_insecure_skip_verify: true
          forcepathstyle: true

    query_frontend:
      search:
        duration_slo: 5s

    overrides:
      metrics_generator_processors:
       - service-graphs
       - span-metrics

  tempo:
    retention: 24h
    storage:
      trace:
        backend: s3
        # store traces in s3
        s3:
          bucket: tempo                                  # store traces in this bucket
          endpoint: master.sale.elewise.com:9000                     # api endpoint
          access_key: elma365user                         # optional. access key when using static credentials.
          secret_key: SecretPassword                       # optional. secret key when using static credentials.
          insecure: false                                 # optional. enable if endpoint is http
          tls_insecure_skip_verify: true                 # turns off TLS handshake verification
    fullnameOverride: "tempo"
    ## параметры подключения к приватному registry
    ## адрес и путь для приватного registry
    repository: hub.elma365.tech/docker/addons/grafana/tempo
    tag: "2.5.0"
    # pullPolicy: IfNotPresent
    # pullSecrets: 
    #   - myRegistryKeySecretNam
extraEnv:
 - name: SSL_CERT_FILE
   value: /home/kind/ssl/rootCA.pem
extraVolumes:
  - name: tempo-certs
    configMap:
      name: tempo-ca
extraVolumeMounts:
  - name: tempo-certs
    mountPath: /etc/tempo-certs
    readOnly: true

jaeger:
  environmentVariables:
    MEMORY_MAX_TRACES: 100000
    SPAN_STORAGE_TYPE: grpc
    BADGER_EPHEMERAL: false
    BADGER_DIRECTORY_VALUE: /badger/data
    BADGER_DIRECTORY_KEY: /badger/key
    REPORTER_TYPE: grpc
    REPORTER_GRPC_HOST_PORT: tempo:14250
    REPORTER_GRPC_RETRY_MAX: 100
  tolerations: 
    - key: "dedicated"
      operator: "Equal"
      value: "staging"
      effect: "NoSchedule"   
  ## параметры подключения к приватному registry
  image:
  # адрес и путь для приватного registry
    repository: hub.elma365.tech/docker/addons/jaegertracing/jaeger-agent
    versionOverride: "1.57.0"
  #   pullPolicy: IfNotPresent
  # imagePullSecrets: 
  #   - myRegistryKeySecretName
  affinity:
  nodeAffinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 50
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: jaeger