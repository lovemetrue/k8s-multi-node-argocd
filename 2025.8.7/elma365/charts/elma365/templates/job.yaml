{{- if eq .Values.global.edition "enterprise" }}
{{- if eq (toString .Values.global.monitoring.provisioner) "microk8s" }}
{{- if eq (toString .Values.global.monitoring.dashboard.enabled) "true" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: mount-db-provider-cm
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "1"
  namespace: monitoring
spec:
  template:
    metadata:
      name: mount-db-processor-cm
    spec:
      {{- if .Values.global.helmLibrary }}
      securityContext:
        {{- include "helm-library.jobGlobal.podSecurityContext" . | nindent 8 }}
      {{- include "helm-library.deployment.scheduling" . | indent 6 }}
      {{- end }}
      imagePullSecrets:
        {{- range .Values.global.image.pullSecret }}
        - name: {{ . }}
        {{- end }}
      serviceAccountName: internal-kubectl
      containers:
        - name: patcher
          image: "{{ .Values.global.image.repository }}/docker/toolkit/kubectl:1.25.13-debian-11-r17"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command: ["bin/bash","-c"]
          args:
            - kubectl patch deployment grafana -n monitoring --patch '{"spec":{"template":{"spec":{"volumes":[{"configMap":{"defaultMode":420,"name":"grafana-custom-dashboards"},"name":"grafana-custom-dashboards"}]}}}}';
              kubectl patch deployment grafana -n monitoring --patch '{"spec":{"template":{"spec":{"containers":[{"name":"grafana","volumeMounts":[{"name":"grafana-custom-dashboards","mountPath":"/etc/grafana/provisioning/dashboards"}]}]}}}}';
        {{- if .Values.global.helmLibrary }}
          securityContext:
            {{- include "helm-library.jobGlobal.securityContext" . | nindent 12 }}
          {{- include "helm-library.jobGlobal.resources" . | indent 10 }}
        {{- end }}
      restartPolicy: Never
{{- end }}
{{- end }}
{{- end }}
