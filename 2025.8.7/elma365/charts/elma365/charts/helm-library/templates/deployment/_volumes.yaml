{{- define "helm-library.deployment.volumeMounts" }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumeMounts:
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes" }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumes:
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-billing" }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumeMounts:
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-billing" }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumes:
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-notifier" }}
volumeMounts:
{{- if .Values.appconfig.push.fcmKey }}
  - name: notifier
    subPath: {{ base .Values.appconfig.push.fcmKeyPath }}
    mountPath: {{ .Values.appconfig.push.fcmKeyPath }}
    readOnly: true
{{- end }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-notifier" }}
volumes:
{{- if .Values.appconfig.push.fcmKey }}
  - name: notifier
    secret:
      secretName: notifier
      items:
        - key: FCM_KEY
          path: {{ base .Values.appconfig.push.fcmKeyPath }}
{{- end }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-dumper" }}
volumeMounts:
  - name: dumps
    mountPath: /tmp/dumps
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-dumper" }}
volumes:
  - name: dumps
    emptyDir: {}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-dottemplater" }}
volumeMounts:
  - name: barcode
    mountPath: /tmp/barcode
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-dottemplater" }}
volumes:
  - name: barcode
    emptyDir: {}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumeMounts-worker-pool-config" }}
{{- $enabled := include "helm-library.worker-pool.enabled" . }}
{{- if $enabled }}
{{ $mountPath := include "helm-library.worker-pool.config-file-directory" . | quote }}
volumeMounts:
  - name: worker-pool-cfg
    mountPath: {{ $mountPath }}
    readOnly: true
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-worker-pool-config" }}
{{- $enabled := include "helm-library.worker-pool.enabled" . }}
{{- if $enabled }}
volumes:
  - name: worker-pool-cfg
    configMap:
      name: {{ include "helm-library.worker-pool.config-map-name" . }}
{{- end }}
{{- end }}
