{{/*
Файл содержит шаблон deployment для произвольного пула воркеров, в том числе дефолтного.
*/}}
{{- define "worker.deployment" }}

{{/*
Ниже описан API данного шаблона, ожидается, что параметры описанные будут переданы в шаблон.
*/}}
{{- $dot := required "GlobalContext should be passed" .GlobalContext }}
{{- $localContext := required "LocalContext should be passed" .LocalContext }}
{{- $gatewayName := include "gateway.name" $dot }}
{{- $overcommit_memory := "true" }}
{{- if or (eq (toString $dot.Values.global.openshift) "true") (eq (toString $dot.Values.global.overcommit_memory) "false") (and (eq (toString $dot.Values.global.openshift) "true") (eq (toString $dot.Values.global.overcommit_memory) "true")) }}
  {{- $overcommit_memory = "false" }}
{{- end }}

{{- $name := required "Name should be passed" $localContext.name }}
{{- $poolKey := required "PoolKey should be passed" $localContext.poolKey }}
{{- $defaultPool := required "Default pool flag should be passed" $localContext.defaultPool }}
{{- $queueName := required "QueueName should be passed" $localContext.queueName }}

{{/* Parse options */}}
{{- $options := $localContext.options | default dict }}
{{- $defaultScriptTimeoutSeconds := $options.defaultScriptTimeoutSeconds | default $dot.Values.global.defaultScriptTimeoutSeconds }}
{{- $maxScriptTimeoutSeconds := $options.maxScriptTimeoutSeconds | default $dot.Values.global.maxScriptTimeoutSeconds }}
{{- $isCustomTimeoutAndNotDefaultPool := and $options.defaultScriptTimeoutSeconds (not $defaultPool) }}

{{- $inputParams := .}}

{{/*
Собственно сам шаблон.
*/}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    {{- include "worker.pool.labels" $inputParams | nindent 4 }}
  annotations:
    {{- with $dot.Values.global.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with $dot.Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not $dot.Values.global.autoscaling.enabled }}
  replicas: {{ int (default $dot.Values.global.replicaCount $dot.Values.replicaCount) }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "worker.pool.selectorLabels" $inputParams | nindent 6 }}
  strategy: {{- toYaml $dot.Values.global.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
        {{- include "worker.pool.selectorLabels" $inputParams | nindent 8 }}
      annotations:
        linkerd.io/inject: disabled
        config.linkerd.io/shutdown-grace-period: {{ $maxScriptTimeoutSeconds | default 600 | quote }}
        {{- with $dot.Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with $dot.Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      # The "terminationGracePeriodSeconds" value is set based on the maximum script execution time (ELMA365_MAX_SCRIPT_TIMEOUT_SECONDS).
      # It is important that all scripts executed at the time of service shutdown have time to complete their execution.
      terminationGracePeriodSeconds: {{ $maxScriptTimeoutSeconds | default 600 }}
      {{- if $dot.Values.global.helmLibrary }}
      securityContext:
        {{- include "helm-library.podSecurityContext" $dot | nindent 8 }}
      {{- end }}
      imagePullSecrets:
      {{- if $dot.Values.image.pullSecret }}
      {{- range $dot.Values.image.pullSecret }}
        - name: {{ . }}
      {{- end }}
      {{- else }}
      {{- range $dot.Values.global.image.pullSecret }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if eq $overcommit_memory "true" }}
      initContainers:
        - name: vm-overcommit-memory
          image: "{{ $dot.Values.global.image.repository }}/docker/toolkit/busybox:1.36.1"
          imagePullPolicy: "IfNotPresent"
          command: ["sysctl", "-w", "vm.overcommit_memory=1"]
          securityContext:
            runAsUser: 0
            privileged: true
      {{- end }}
      containers:
        - name: worker
          image: "{{ $dot.Values.image.repository | default $dot.Values.global.image.repository }}/elma365/serv_worker/worker:{{ $dot.Values.images.worker }}"
          imagePullPolicy: {{ $dot.Values.global.image.pullPolicy }}
          ports:
            - name: http-port-wrk
              containerPort: {{ $dot.Values.service.http_port_wrk }}
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- if $dot.Values.appconfig.concurrency }}
            - name: ELMA365_WORKER_CONCURENCY
              value: {{ int $dot.Values.appconfig.concurrency | quote }}
            {{- end }}
            - name: WORKER_HTTP_PORT
              value: "{{ $dot.Values.service.http_port_wrk }}"
            {{- if $dot.Values.global.skipSslVerify }}
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            {{- end }}
            {{- if $dot.Values.appconfig.httpProxyAddr }}
            - name: HTTP_PROXY
              value: {{ $dot.Values.appconfig.httpProxyAddr }}
            {{- end }}
            - name: ELMA365_GATEWAY_HOST
              value: {{ $gatewayName | quote }}
            - name: ELMA365_GATEWAY_PORT
              value: {{ printf ":%d" (int $dot.Values.global.http_port) | quote }}
            - name: ELMA365_FORK_AVAILABLE_MEMORY_SIZE
              value: {{ int $dot.Values.appconfig.forkAvailableMemorySize | quote }}
            - name: ELMA365_SKIP_COMPILATION_LIMITS
              value: {{ default "false" $dot.Values.appconfig.skipCompilationLimits | quote }}
            - name: ELMA365_OTELIER_PORT
              value: {{ $dot.Values.global.monitoring.lowcode.internalOtlpHttpPort | default 3001 | quote }}
            {{- if $dot.Values.global.monitoring }}
            {{- if $dot.Values.global.monitoring.lowcode }}
            - name: ELMA365_OTELIER_PROMETHEUS_EXPORTER_ENABLED
              value: {{ $dot.Values.global.monitoring.lowcode.metricExportEnabled | default false | quote }}
            {{- else }}
            - name: ELMA365_OTELIER_PROMETHEUS_EXPORTER_ENABLED
              value: "false"
            {{- end }}
            {{- end }}
            - name: ELMA365_FETCH_SETTINGS
              value: {{ $dot.Values.fetch | toJson | quote }}
            {{- if $maxScriptTimeoutSeconds }}
            - name: ELMA365_MAX_SCRIPT_TIMEOUT_SECONDS
              value: {{ $maxScriptTimeoutSeconds | default 600 | quote }}
            {{- end }}
            {{- if $defaultScriptTimeoutSeconds }}
            - name: ELMA365_DEFAULT_SCRIPT_TIMEOUT_SECONDS
              value: {{ $defaultScriptTimeoutSeconds | default 60 | quote }}
            {{- end }}
            {{- if $isCustomTimeoutAndNotDefaultPool }}
            - name: ELMA365_CUSTOM_DEFAULT_SCRIPT_TIMEOUT
              value: "true"
            {{- end }}
            {{- if $dot.Values.appconfig.pingTimeoutMs }}
            - name: ELMA365_WORKER_FORK_PING_TIMEOUT
              value: {{ int $dot.Values.appconfig.pingTimeoutMs | default 300 | quote }}
            {{- end }}
            {{- if $dot.Values.appconfig.pingIntervalMs }}
            - name: ELMA365_WORKER_FORK_PING_INTERVAL
              value: {{ int $dot.Values.appconfig.pingIntervalMs | default 400 | quote }}
            {{- end }}
            {{- if $dot.Values.global.runtimeSchemaCacheMemoryLimit }}
            - name: ELMA365_RUNTIME_SCHEMA_CACHE_MEMORY_LIMIT
              value: {{ $dot.Values.global.runtimeSchemaCacheMemoryLimit | default 0 | quote }}
            {{- end }}
            - name: SCRIPT_DEFAULT_POOL
              value: {{ $defaultPool | quote }}
            - name: SCRIPT_DEFAULT_EXCHANGE
              value: {{ $dot.Values.appconfig.scriptExchange | default "script" | quote }}
            - name: SCRIPT_DEFAULT_ALTERNATE_EXCHANGE
              value: {{ $dot.Values.appconfig.scriptAlternateExchange | default "script-default" | quote }}
            - name: SCRIPT_DEFAULT_QUEUE
              value: {{ $dot.Values.appconfig.defaultScriptQueue | default "script.default" | quote }}
            - name: SCRIPT_QUEUE
              value: {{ $queueName | quote }}
          {{- if $dot.Values.global.helmLibrary }}
            {{- include "helm-library.deployment.env" $dot | indent 12 }}
          {{- end }}
            - name: AMQP_URL
              valueFrom:
                secretKeyRef:
                  name: elma365-db-connections
                  key: AMQP_URL
                  optional: false
          envFrom:
            - configMapRef:
                name: elma365-env-config
                optional: true
      {{- if $dot.Values.global.helmLibrary }}
          securityContext:
            {{- include "helm-library.deployment.securityContext" $dot | nindent 12 }}
          {{- include "helm-library.deployment.resources" $dot | indent 10 }}
          {{- include "helm-library.deployment.volumeMounts" $dot | indent 10 }}
          {{- include "helm-library.deployment.lifecycle" $dot | indent 10 }}
        {{- include "helm-library.deployment.volumes" $dot | indent 6 }}
        {{- include "helm-library.deployment.terminationgraceperiod" $dot | indent 6 }}
        {{- include "helm-library.deployment.scheduling" $dot | indent 6 }}
      {{- end }}
{{- end }}
