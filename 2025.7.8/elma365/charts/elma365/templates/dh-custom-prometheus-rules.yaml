{{- if or ( eq .Values.global.edition "enterprise" ) ( not ( eq .Values.global.solution "onPremise" ) ) }}
{{- if eq (toString .Values.global.autoscaling.enabled) "true" }}
{{- if eq (toString .Values.global.monitoring.provisioner) "deckhouse" }}
{{- $rmqVhost := regexFind "[A-Za-z0-9]+$" (toString .Values.db.amqpUrl) -}}
{{- $dbsExporterService := .Values.global.monitoring.rmqExporterName | default "dbsexporter-rabbitmq" -}}
apiVersion: deckhouse.io/v1
kind: CustomPrometheusRules
metadata:
  name: prometheus-metrics-adapter-elma365-worker
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
spec:
  groups:
  - name: prometheus-metrics-adapter.elma365-worker
    rules:
    - record: kube_adapter_metric_elma365_worker
      expr: rabbitmq_queue_messages{namespace="{{.Release.Namespace}}",service="{{$dbsExporterService}}",queue=~"script.default",vhost="{{$rmqVhost}}"}
---
apiVersion: deckhouse.io/v1
kind: CustomPrometheusRules
metadata:
  name: prometheus-metrics-adapter-elma365-worker-gateway
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
spec:
  groups:
  - name: prometheus-metrics-adapter.elma365-worker-gateway
    rules:
    - record: kube_adapter_metric_elma365_worker_gateway
      expr: rabbitmq_queue_messages{namespace="{{.Release.Namespace}}",service="{{$dbsExporterService}}",queue=~"script.default",vhost="{{$rmqVhost}}"}
---
apiVersion: deckhouse.io/v1
kind: CustomPrometheusRules
metadata:
  name: prometheus-metrics-adapter-elma365-contractor
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
spec:
  groups:
  - name: prometheus-metrics-adapter.elma365-contractor
    rules:
    - record: kube_adapter_metric_elma365_contractor
      expr: rabbitmq_queue_messages{namespace="{{.Release.Namespace}}",service="{{$dbsExporterService}}",queue=~"contractor.observable_items_events",vhost="{{$rmqVhost}}"}
---
apiVersion: deckhouse.io/v1
kind: CustomPrometheusRules
metadata:
  name: prometheus-metrics-adapter-elma365-diskjockey
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
spec:
  groups:
  - name: prometheus-metrics-adapter.elma365-diskjockey
    rules:
    - record: kube_adapter_metric_elma365_diskjockey
      expr: rabbitmq_queue_messages{namespace="{{.Release.Namespace}}",service="{{$dbsExporterService}}",queue=~"diskjockey.file.expired",vhost="{{$rmqVhost}}"}
---
apiVersion: deckhouse.io/v1
kind: CustomPrometheusRules
metadata:
  name: prometheus-metrics-adapter-elma365-dup-detector
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
spec:
  groups:
  - name: prometheus-metrics-adapter.elma365-dup-detector
    rules:
    - record: kube_adapter_metric_elma365_dup_detector
      expr: rabbitmq_queue_messages{namespace="{{.Release.Namespace}}",service="{{$dbsExporterService}}",queue=~"dup_detector.observable_collections_events",vhost="{{$rmqVhost}}"}
---
apiVersion: deckhouse.io/v1
kind: CustomPrometheusRules
metadata:
  name: prometheus-metrics-adapter-elma365-postman
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
spec:
  groups:
  - name: prometheus-metrics-adapter.elma365-postman
    rules:
    - record: kube_adapter_metric_elma365_postman
      expr: rabbitmq_queue_messages{namespace="{{.Release.Namespace}}",service="{{$dbsExporterService}}",queue=~"_postman._new_messages",vhost="{{$rmqVhost}}"}
---
apiVersion: deckhouse.io/v1
kind: CustomPrometheusRules
metadata:
  name: prometheus-metrics-adapter-elma365-processor
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
spec:
  groups:
  - name: prometheus-metrics-adapter.elma365-processor
    rules:
    - record: kube_adapter_metric_elma365_processor
      expr: rabbitmq_queue_messages{namespace="{{.Release.Namespace}}",service="{{$dbsExporterService}}",queue=~"processor.timers_start_process",vhost="{{$rmqVhost}}"}
{{- end }}
{{- end }}
{{- end }}