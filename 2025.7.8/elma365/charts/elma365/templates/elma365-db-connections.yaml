{{- if ne (toString .Values.db.enabled) "false" }}
{{- if .Values.global.secretCreationHook }}

apiVersion: batch/v1
kind: Job
metadata:
  name: create-db-connections-secret
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-28"
    elma365.com/info: "Secret created by Hook"
spec:
  backoffLimit: {{ .Values.global.backoffLimit }}
  {{- if .Values.global.setupJobTtlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.global.setupJobTtlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      name: create-db-connections-secret
      labels:
        sidecar.istio.io/inject: "false"
      annotations:
        linkerd.io/inject: disabled
    spec:
      serviceAccountName: internal-kubectl-secrets
      {{- if .Values.global.helmLibrary }}
      securityContext:
        {{- include "helm-library.jobGlobal.podSecurityContext" . | nindent 8 }}
        {{- include "helm-library.deployment.scheduling" . | indent 6 }}
      {{- end }}
      imagePullSecrets:
      {{- range .Values.global.image.pullSecret }}
        - name: {{ . }}
      {{- end }}
      containers:
      - name: create-db-connections-secret
        image: "{{ .Values.global.image.repository }}/docker/toolkit/kubectl:1.25.13-debian-11-r17"
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command: ["sh", "-c", "env | grep -E '*_URL|S3_*' > /tmp/secrets.txt && kubectl create secret generic elma365-db-connections --save-config --dry-run=client --from-env-file=/tmp/secrets.txt -o yaml | kubectl apply -f - && kubectl annotate secret elma365-db-connections 'argocd.argoproj.io/sync-options=SkipDryRunOnMissingResource=true' --overwrite"]
        env:
        {{- with .Values.db }}
        {{- if ne (toString .secrets) "true" }}
          # CURRENT db connections
          - name: PSQL_URL
            value: {{ default "" .psqlUrl | quote }}
          - name: RO_POSTGRES_URL
            value: {{ default "" .roPsqlUrl | quote }}
          - name: ELMA365_POOL_POSTGRES_URL
            value: {{ default "" .roPsqlUrl | quote }}
          - name: MONGO_URL
            value: {{ default "" .mongoUrl | quote }}
          - name: AMQP_URL
            value: {{ default "" .amqpUrl | quote }}
          - name: REDIS_URL
            value: {{ default "" .redisUrl | quote }}
          - name: VAHTER_MONGO_URL
            value: {{ default "" .vahterMongoUrl | quote }}
          {{- if .publicPsqlUrl }}
          - name: ELMA365_PUBLIC_DB_CONNECTION_STRING
            value: {{ default "" .publicPsqlUrl | quote }}
          {{- end }}
          {{- if .publicMongoUrl }}
          - name: ELMA365_PUBLIC_MONGO_URL
            value: {{ default "" .publicMongoUrl | quote }}
          {{- end }}
          {{- if .clusterRegistryConnectionString }}
          - name: ELMA365_CLUSTER_REGISTRY_CONNECTION_STRING
            value: {{ default "" .clusterRegistryConnectionString | quote }}
          {{- end }}
          {{- if .amqpManagementUrl }}
          - name: ELMA365_AMQP_MANAGEMENT_URL
            value: {{ default "" .amqpManagementUrl | quote }}
          {{- end }}
          {{- if .amqpUrl }}
          - name: ELMA365_AMQP_URL
            value: {{ default "" .amqpUrl | quote }}
          {{- end }}
          # MULTI-connections to DBs
          {{- range .multi }}
          {{- if .psqlUrl }}
          - name: PSQL_URL_{{ .name }}
            value: {{ default "" .psqlUrl | quote }}
          {{- end }}
          {{- if .roPsqlUrl }}
          - name: RO_PSQL_URL_{{ .name }}
            value: {{ default "" .roPsqlUrl | quote }}
          {{- end }}
          {{- if .mongoUrl }}
          - name: MONGO_URL_{{ .name }}
            value: {{ default "" .mongoUrl | quote }}
          {{- end }}
          {{- if .redisUrl }}
          - name: REDIS_URL_{{ .name }}
            value: {{ default "" .redisUrl | quote }}
          {{- end }}
          {{- end }}
        {{- with .s3 }}
          - name: S3_BACKEND_ADDRESS
            value: {{ .backend.address | quote }}
          - name: S3_REGION
            value: {{ .backend.region | quote }}
          - name: S3_BUCKET
            value: {{ .bucket | quote }}
          - name: S3_KEY
            value: {{ .accesskeyid | quote }}
          - name: S3_SECRET
            value: {{ .secretaccesskey | quote }}
          - name: S3_SSL_ENABLED
            value: {{ .ssl.enabled | quote }}
          - name: S3_UPLOAD_METHOD
            value: {{ .method | quote }}
          - name: S3_DUMP_URL
            value: {{ default "" .dumpurl | quote }}
          - name: S3_INTERCLUSTER_BUCKET
            value: {{ default "" .interclusterbucket | quote }}
        {{- end }}
        {{- else }}
          # CONNECTION STRINGS sources are Secrets
        {{- if .psqlSecret }}
          {{- $psqlSecret := (lookup "v1" "Secret" .Release.Namespace .psqlSecret) }}
          - name: PSQL_URL
            value: {{ $psqlSecret.data.PSQL_URL | default (.psqlUrl | quote) }}
          {{- else if .psqlUrl }}
          - name: PSQL_URL
            value: {{ default "" .psqlUrl | quote }}
          {{- end }}

          {{- if .roPsqlSecret }}
          {{- $roPsqlSecret := (lookup "v1" "Secret" .Release.Namespace .roPsqlSecret) }}
          - name: RO_PSQL_URL
            value: {{ $roPsqlSecret.data.RO_POSTGRES_URL | default (.roPsqlUrl | quote) }}
          {{- else if .roPsqlUrl }}
          - name: RO_PSQL_URL
            value: {{ default "" .roPsqlUrl | quote }}
          {{- end }}

          {{- if .mongoSecret }}
          {{- $mongoSecret := (lookup "v1" "Secret" .Release.Namespace .mongoSecret) }}
          - name: MONGO_URL
            value: {{ $mongoSecret.data.MONGO_URL | default (.mongoUrl | quote) }}
          {{- else if .mongoUrl }}
          - name: MONGO_URL
            value: {{ default "" .mongoUrl | quote }}
          {{- end }}

          {{- if .vahterMongoSecret }}
          {{- $vahterMongoSecret := (lookup "v1" "Secret" .Release.Namespace .vahterMongoSecret) }}
          - name: VAHTER_MONGO_URL
            value: {{ $vahterMongoSecret.data.VAHTER_MONGO_URL | default (.vahterMongoUrl | quote) }}
          {{- else if .vahterMongoUrl }}
          - name: VAHTER_MONGO_URL
            value: {{ default "" .vahterMongoUrl | quote }}
          {{- end }}

          {{- if .amqpSecret }}
          {{- $amqpSecret := (lookup "v1" "Secret" .Release.Namespace .amqpSecret) }}
          - name: AMQP_URL
            value: {{ $amqpSecret.data.AMQP_URL | default (.amqpUrl | quote) }}
          {{- else if .amqpUrl }}
          - name: AMQP_URL
            value: {{ default "" .amqpUrl | quote }}
          {{- end }}

          {{- if .redisSecret }}
          {{- $redisSecret := (lookup "v1" "Secret" .Release.Namespace .redisSecret) }}
          - name: REDIS_URL
            value: {{ $redisSecret.data.REDIS_URL | default (.redisUrl | quote) }}
          {{- else if .redisUrl }}
          - name: REDIS_URL
            value: {{ default "" .redisUrl | quote }}
          {{- end }}

        {{- if .multi }}
          {{- if .multiSecret }}
          {{- $multiSecret := (lookup "v1" "Secret" .Release.Namespace .multiSecret) }}
          {{- $secretData := (get $multiSecret "data") }}
          {{- range $key, $value := $secretData }}
          {{- if or (regexMatch "^PSQL_URL_.*$" $key) (regexMatch "^RO_PSQL_URL_.*$" $key) }}
          {{ $key }}: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- else }}
          {{- range .multi }}
            {{- if .psqlUrl }}
          - name: PSQL_URL_{{ .name }}
            value: {{ default "" .psqlUrl | quote }}
            {{- end }}
            {{- if .roPsqlUrl }}
          - name: RO_PSQL_URL_{{ .name }}
            value: {{ default "" .roPsqlUrl | quote }}
            {{- end }}
            {{- if .mongoUrl }}
          - name: MONGO_URL_{{ .name }}
            value: {{ default "" .mongoUrl | quote }}
            {{- end }}
            {{- if .redisUrl }}
          - name: REDIS_URL_{{ .name }}
            value: {{ default "" .redisUrl | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- end }}

        {{- if .s3Secret }}
          {{- $s3Secret := (lookup "v1" "Secret" .Release.Namespace .s3Secret) }}
          - name: S3_BACKEND_ADDRESS
            value: {{ $s3Secret.data.S3_BACKEND_ADDRESS | default (.s3.backend.address | quote) }}
          - name: S3_REGION
            value: {{ $s3Secret.data.S3_REGION | default (.s3.backend.region | quote) }}
          - name: S3_KEY
            value: {{ $s3Secret.data.S3_KEY | default (.s3.accesskeyid | quote) }}
          - name: S3_SECRET
            value: {{ $s3Secret.data.S3_SECRET | default (.s3.secretaccesskey | quote) }}
          - name: S3_BUCKET
            value: {{ $s3Secret.data.S3_BUCKET | default (.s3.bucket | quote) }}
          - name: S3_SSL_ENABLED
            value: {{ $s3Secret.data.S3_SSL_ENABLED | default (.s3.ssl.enabled | quote) }}
          - name: S3_UPLOAD_METHOD
            value: {{ $s3Secret.data.S3_UPLOAD_METHOD | default (.s3.method | quote) }}
          - name: S3_DUMP_URL
            value: {{ $s3Secret.data.S3_DUMP_URL | default (.s3.dumpurl | quote) }}
          {{- else }}
          - name: S3_BACKEND_ADDRESS
            value: {{ .backend.address | quote }}
          - name: S3_REGION
            value: {{ .backend.region | quote }}
          - name: S3_BUCKET
            value: {{ .bucket | quote }}
          - name: S3_KEY
            value: {{ .accesskeyid | quote }}
          - name: S3_SECRET
            value: {{ .secretaccesskey | quote }}
          - name: S3_SSL_ENABLED
            value: {{ .ssl.enabled | quote }}
          - name: S3_UPLOAD_METHOD
            value: {{ .method | quote }}
          - name: S3_DUMP_URL
            value: {{ default "" .dumpurl | quote }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.global.helmLibrary }}
        securityContext:
          {{- include "helm-library.jobGlobal.securityContext" . | nindent 10 }}
        {{- include "helm-library.jobGlobal.resources" . | indent 8 }}
        {{- end }}
        volumeMounts:
        - name: secret-volume
          mountPath: /tmp
      volumes:
      - name: secret-volume
        emptyDir: {}
      restartPolicy: OnFailure

{{- else -}}

apiVersion: v1
kind: Secret
metadata:
  name: elma365-db-connections
  labels:
    tier: elma365
    configuration: global
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    {{- if .Values.global.secretCreationHook }}
    argocd.argoproj.io/hook: Skip
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    {{- else }}
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-30"
    helm.sh/hook-delete-policy: before-hook-creation
    elma365.com/info: "Secret created by Template"
    {{- end }}
type: Opaque
data:

{{- with .Values.db }}

{{- if ne (toString .secrets) "true" }}
  # CONNECTION STRINGS sources are Values

  # CURRENT db connections
  PSQL_URL:                  {{ default "" .psqlUrl   | b64enc | quote }}
  RO_POSTGRES_URL:           {{ default "" .roPsqlUrl | b64enc | quote }}
  ELMA365_POOL_POSTGRES_URL: {{ default "" .roPsqlUrl | b64enc | quote }}
  MONGO_URL:                 {{ default "" .mongoUrl  | b64enc | quote }}
  AMQP_URL:                  {{ default "" .amqpUrl   | b64enc | quote }}
  REDIS_URL:                 {{ default "" .redisUrl  | b64enc | quote }}
  VAHTER_MONGO_URL:          {{ default "" .vahterMongoUrl | b64enc | quote }}
  {{- if .publicPsqlUrl }}
  ELMA365_PUBLIC_DB_CONNECTION_STRING: {{ default "" .publicPsqlUrl | b64enc | quote }}
  {{- end }}
  {{- if .publicMongoUrl }}
  ELMA365_PUBLIC_MONGO_URL:  {{ default "" .publicMongoUrl | b64enc | quote }}
  {{- end }}
  {{- if .clusterRegistryConnectionString }}
  ELMA365_CLUSTER_REGISTRY_CONNECTION_STRING: {{ default "" .clusterRegistryConnectionString | b64enc | quote }}
  {{- end }}
  {{- if .amqpManagementUrl }}
  ELMA365_AMQP_MANAGEMENT_URL: {{ default "" .amqpManagementUrl | b64enc | quote }} # tcp://192.168.18.23:15672
  {{- end }}
  {{- if .amqpUrl }}
  ELMA365_AMQP_URL:          {{ default "" .amqpUrl | b64enc | quote }}
  {{- end }}

  # MULTI-connections to DBs
  {{- range .multi }}
  {{- if .psqlUrl }}
  PSQL_URL_{{ .name }}:    {{ default "" .psqlUrl | b64enc | quote }}
  {{- end }}
  {{- if .roPsqlUrl }}
  RO_PSQL_URL_{{ .name }}: {{ default "" .roPsqlUrl | b64enc | quote }}
  {{- end }}
  {{- if .mongoUrl }}
  MONGO_URL_{{ .name }}:   {{ default "" .mongoUrl | b64enc | quote }}
  {{- end }}
  {{- if .redisUrl }}
  REDIS_URL_{{ .name }}:   {{ default "" .redisUrl | b64enc | quote }}
  {{- end }}
  {{- end }}

  # S3
  {{- with .s3 }}
  S3_BACKEND_ADDRESS: {{ .backend.address | b64enc | quote }}
  S3_REGION:          {{ .backend.region | b64enc | quote }}
  S3_BUCKET:          {{ .bucket | b64enc | quote }}
  S3_KEY:             {{ .accesskeyid | b64enc | quote }}
  S3_SECRET:          {{ .secretaccesskey | b64enc | quote }}
  S3_SSL_ENABLED:     {{ .ssl.enabled | b64enc | quote }}
  S3_UPLOAD_METHOD:   {{ .method | b64enc | quote }}
  {{- if .virtualHostedStyle }}
  S3_VIRTUAL_HOSTED_STYLE_ENABLED : {{ default "false" .virtualHostedStyle.enabled | b64enc | quote }}
  {{- end }}
  S3_DUMP_URL:        {{ default "" .dumpurl | b64enc | quote }}
  S3_INTERCLUSTER_BUCKET: {{ default "" .interclusterbucket | b64enc | quote }}
  {{- end }}

{{- else }}
  # CONNECTION STRINGS sources are Secrets

  {{- if .psqlSecret }}
  {{- $psqlSecret := (lookup "v1" "Secret" $.Release.Namespace .psqlSecret) }}
  PSQL_URL: {{ $psqlSecret.data.PSQL_URL | default (.psqlUrl | quote) }}
  {{- else }}
  PSQL_URL: {{ default "" .psqlUrl | b64enc | quote }}
  {{- end }}

  {{- if .roPsqlSecret }}
  {{- $roPsqlSecret := (lookup "v1" "Secret" $.Release.Namespace .roPsqlSecret) }}
  RO_POSTGRES_URL: {{ $roPsqlSecret.data.RO_POSTGRES_URL | default (.roPsqlUrl | quote) }}
  {{- else }}
  RO_POSTGRES_URL: {{ default "" .roPsqlUrl | b64enc | quote }}
  {{- end }}

  {{- if .mongoSecret }}
  {{- $mongoSecret := (lookup "v1" "Secret" $.Release.Namespace .mongoSecret) }}
  MONGO_URL: {{ $mongoSecret.data.MONGO_URL | default (.mongoUrl | quote) }}
  {{- else }}
  MONGO_URL: {{ default "" .mongoUrl | b64enc | quote }}
  {{- end }}

  {{- if .vahterMongoSecret }}
  {{- $vahterMongoSecret := (lookup "v1" "Secret" $.Release.Namespace .vahterMongoSecret) }}
  VAHTER_MONGO_URL: {{ $vahterMongoSecret.data.VAHTER_MONGO_URL | default (.vahterMongoUrl | quote) }}
  {{- else }}
  VAHTER_MONGO_URL: {{ default "" .vahterMongoUrl | b64enc | quote }}
  {{- end }}

  {{- if .amqpSecret }}
  {{- $amqpSecret := (lookup "v1" "Secret" $.Release.Namespace .amqpSecret) }}
  AMQP_URL: {{ $amqpSecret.data.AMQP_URL | default (.amqpUrl | quote) }}
  {{- else }}
  AMQP_URL: {{ default "" .amqpUrl | b64enc | quote }}
  {{- end }}

  {{- if .redisSecret }}
  {{- $redisSecret := (lookup "v1" "Secret" $.Release.Namespace .redisSecret) }}
  REDIS_URL: {{ $redisSecret.data.REDIS_URL | default (.redisUrl | quote) }}
  {{- else }}
  REDIS_URL: {{ default "" .redisUrl | b64enc | quote }}
  {{- end }}

  {{- if .multi }}
  {{- if .multiSecret }}
  {{- $multiSecret := (lookup "v1" "Secret" $.Release.Namespace .multiSecret) }}
  {{- $secretData := (get $multiSecret "data") }}
  {{- range $key, $value := $secretData}}
  {{- if or (regexMatch "^PSQL_URL_.*$" $key) (regexMatch "^RO_PSQL_URL_.*$" $key) }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  {{- else }}
  {{- range .multi }}
  {{- if .psqlUrl }}
  PSQL_URL_{{ .name }}:    {{ default "" .psqlUrl | b64enc | quote }}
  {{- end }}
  {{- if .roPsqlUrl }}
  RO_PSQL_URL_{{ .name }}: {{ default "" .roPsqlUrl | b64enc | quote }}
  {{- end }}
  {{- if .mongoUrl }}
  MONGO_URL_{{ .name }}:   {{ default "" .mongoUrl | b64enc | quote }}
  {{- end }}
  {{- if .redisUrl }}
  REDIS_URL_{{ .name }}:   {{ default "" .redisUrl | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}

  {{- if .s3Secret }}
  {{- $s3Secret := (lookup "v1" "Secret" $.Release.Namespace .s3Secret) }}
  S3_BACKEND_ADDRESS:              {{ $s3Secret.data.S3_BACKEND_ADDRESS | default (.s3.backend.address | quote) }}
  S3_REGION:                       {{ $s3Secret.data.S3_REGION | default (.s3.backend.region | quote) }}
  S3_KEY:                          {{ $s3Secret.data.S3_KEY | default (.s3.accesskeyid | quote) }}
  S3_SECRET:                       {{ $s3Secret.data.S3_SECRET | default (.s3.secretaccesskey | quote) }}
  S3_BUCKET:                       {{ $s3Secret.data.S3_BUCKET | default (.s3.bucket | quote) }}
  S3_SSL_ENABLED:                  {{ $s3Secret.data.S3_SSL_ENABLED | default (.s3.ssl.enabled | quote) }}
  S3_UPLOAD_METHOD:                {{ $s3Secret.data.S3_UPLOAD_METHOD | default (.s3.method | quote) }}
  S3_VIRTUAL_HOSTED_STYLE_ENABLED: {{ $s3Secret.data.S3_VIRTUAL_HOSTED_STYLE_ENABLED | default (.s3.virtualHostedStyle.enabled | quote) }}
  S3_DUMP_URL:                     {{ $s3Secret.data.S3_DUMP_URL | default (.s3.dumpurl | quote) }}
  S3_INTERCLUSTER_BUCKET:          {{ default "" .s3.interclusterbucket | quote }}
  {{- else }}
  S3_BACKEND_ADDRESS:              {{ .s3.backend.address | b64enc | quote }}
  S3_REGION:                       {{ .s3.backend.region | b64enc | quote }}
  S3_BUCKET:                       {{ .s3.bucket | b64enc | quote }}
  S3_KEY:                          {{ .s3.accesskeyid | b64enc | quote }}
  S3_SECRET:                       {{ .s3.secretaccesskey | b64enc | quote }}
  S3_SSL_ENABLED:                  {{ .s3.ssl.enabled | b64enc | quote }}
  S3_UPLOAD_METHOD:                {{ .s3.method | b64enc | quote }}
  S3_VIRTUAL_HOSTED_STYLE_ENABLED: {{ default "false" .s3.virtualHostedStyle.enabled | b64enc | quote }}
  S3_DUMP_URL:                     {{ default "" .s3.dumpurl | b64enc | quote }}
  S3_INTERCLUSTER_BUCKET:          {{ default "" .s3.interclusterbucket | b64enc | quote }}
  {{- end }}

{{- end }}

{{- end }}
{{- end }}
{{- end }}
